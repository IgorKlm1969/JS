1. Продумать, где можно применить замыкания для практикума из седьмого урока. 
Применил замыкание для организации поэтапного вывода карточек каталога в проекте. 
Ещё в проекте можно добавить функцию с замыканием для задержки отрисовки модального окна корзины 
при быстром увеличении или уменьшении пользователем количества той или иной товарной позиции.

2. Не выполняя код, ответить, что выведет браузер и почему:
 
a. 
if (!("a" in window)) {
    var a = 1;
}
alert(a);

Браузер выведет undefined. Интерпритатор вносит переменную a как объявленную (но без присвоения) ещё в момент прохода компиляции, до его непосредственного выполнения.
Соответственно, объект window на момент выполнения скрипта уже содержит в себе элемент с ключом 'а' имеющий значение undefined,
а значит указанное в скрипте условие не выполнится и в переменную а не запишется значение 1, то есть она так и останется undefined.

b.
var b = function a(x) {
    x && a(--x);
};
alert(a);

Вернёт ошибку. Функция a не определена в глобальном пространстве имён, ссылка на неё содержится только в переменной b, 
а обращение к элементом локального пространства имён из глобального пространства имён не возможно.


c.
function a(x) {
    return x * 2;
}
var a;
alert(a);

Вернёт объект функции a. Интерпритатор обявляет переменные и функции ещё на этапе прохода компиляции 
и затем при выполнении кода ищёт их обявления в соответствующей области видимости (из локальных к глобальным). 
В данном случае область видимости одна, глобальная. Функция объявлена выше переменной, соответственно она и будет возвращена,
а второе объявление останется невостребованным.




function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);

Вернёт 10. a содержится в массиве аргументов под индексом 2. Соответственно, 
какое бы значение аргументу на этой позиции не передавалось при вызове функции,
оно будет заменено на 10.


*
function a() {
    alert(this);
}
a.call(null);

При использовании use strict вернёт null, так как контекст заменён на null при вызове функции,
без use strict вернёт объект Window, так как в нестрогом режиме null заменится на самый глобальный контекст.